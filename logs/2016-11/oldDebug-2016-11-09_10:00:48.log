2016-11-09 09:49:42,081 DEBUG(NiceForestService.java:34): Server started
2016-11-09 09:49:43,160 DEBUG(NiceForestContainer.java:27): Handling request
2016-11-09 09:49:43,161 DEBUG(TaskSimple.java:39): Starting task
2016-11-09 09:49:43,278 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 09:49:43,278 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 09:49:43,280 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T09:49:43.179+01:00,dataSource=youbora_events_13,filter=[user_id == "11938814", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-09 09:49:43,287 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"11938814"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T09:49:43.179+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-09 09:49:43,288 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 09:49:43,492 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 204ms.
2016-11-09 09:49:43,492 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-09 09:49:43,496 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 09:49:43,497 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 09:49:43,498 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T09:49:43.179+01:00,dataSource=youbora_events_13,filter=[user_id == "11938814"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-09 09:49:43,499 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"11938814"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T09:49:43.179+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-09 09:49:43,500 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 09:49:43,774 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 273ms.
2016-11-09 09:49:43,774 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
2016-11-09 09:49:46,771 DEBUG(TaskSimple.java:71): 0
2016-11-09 09:50:21,282 DEBUG(NiceForestContainer.java:27): Handling request
2016-11-09 09:50:21,283 DEBUG(TaskSimple.java:39): Starting task
2016-11-09 09:50:21,283 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 09:50:21,284 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 09:50:21,284 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T09:50:21.283+01:00,dataSource=youbora_events_13,filter=[user_id == "1768792", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-09 09:50:21,285 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"1768792"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T09:50:21.283+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-09 09:50:21,285 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 09:50:21,557 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 272ms.
2016-11-09 09:50:21,558 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-09 09:50:21,559 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 09:50:21,559 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 09:50:21,559 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T09:50:21.283+01:00,dataSource=youbora_events_13,filter=[user_id == "1768792"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-09 09:50:21,560 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"1768792"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T09:50:21.283+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-09 09:50:21,560 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 09:50:21,798 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 238ms.
2016-11-09 09:50:21,799 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
2016-11-09 09:50:23,087 DEBUG(TaskSimple.java:71): 0
2016-11-09 09:51:46,539 DEBUG(NiceForestContainer.java:27): Handling request
2016-11-09 09:51:46,540 DEBUG(TaskSimple.java:39): Starting task
2016-11-09 09:51:46,541 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 09:51:46,541 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 09:51:46,541 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T09:51:46.541+01:00,dataSource=youbora_events_13,filter=[user_id == "939123", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-09 09:51:46,542 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"939123"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T09:51:46.541+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-09 09:51:46,542 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 09:51:46,834 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 291ms.
2016-11-09 09:51:46,835 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-09 09:51:46,835 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 09:51:46,836 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 09:51:46,836 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T09:51:46.541+01:00,dataSource=youbora_events_13,filter=[user_id == "939123"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-09 09:51:46,836 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"939123"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T09:51:46.541+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-09 09:51:46,837 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 09:51:47,084 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 247ms.
2016-11-09 09:51:47,084 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
2016-11-09 09:51:48,294 DEBUG(TaskSimple.java:71): 0
2016-11-09 09:53:27,999 DEBUG(NiceForestContainer.java:27): Handling request
2016-11-09 09:53:28,000 DEBUG(TaskSimple.java:39): Starting task
2016-11-09 09:53:28,002 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 09:53:28,003 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 09:53:28,003 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T09:53:28.002+01:00,dataSource=youbora_events_13,filter=[user_id == "12199031", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-09 09:53:28,003 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"12199031"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T09:53:28.002+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-09 09:53:28,004 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 09:53:28,254 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 250ms.
2016-11-09 09:53:28,255 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-09 09:53:28,259 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 09:53:28,259 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 09:53:28,261 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T09:53:28.002+01:00,dataSource=youbora_events_13,filter=[user_id == "12199031"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-09 09:53:28,263 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"12199031"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T09:53:28.002+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-09 09:53:28,265 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 09:53:28,506 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 240ms.
2016-11-09 09:53:28,506 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
2016-11-09 09:53:29,712 DEBUG(TaskSimple.java:71): 0
