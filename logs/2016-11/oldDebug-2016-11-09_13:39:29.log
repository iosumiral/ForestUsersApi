2016-11-09 13:25:32,570 DEBUG(NiceForestService.java:34): Server started
2016-11-09 13:25:53,270 DEBUG(NiceForestContainer.java:27): Handling request
2016-11-09 13:25:53,271 DEBUG(TaskSimple.java:39): Starting task
2016-11-09 13:25:53,350 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:25:53,350 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:25:53,352 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:25:53.281+01:00,dataSource=youbora_events_13,filter=[user_id == "10317476", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-09 13:25:53,356 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"10317476"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:25:53.281+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-09 13:25:53,357 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:25:53,653 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 296ms.
2016-11-09 13:25:53,653 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-09 13:25:53,653 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:25:53,654 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:25:53,655 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:25:53.281+01:00,dataSource=youbora_events_13,filter=[user_id == "10317476"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-09 13:25:53,656 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"10317476"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:25:53.281+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-09 13:25:53,656 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:25:53,898 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 241ms.
2016-11-09 13:25:53,899 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
2016-11-09 13:25:54,677 DEBUG(TaskSimple.java:74): 1
2016-11-09 13:29:07,945 DEBUG(NiceForestContainer.java:27): Handling request
2016-11-09 13:29:07,946 DEBUG(TaskSimple.java:39): Starting task
2016-11-09 13:29:07,947 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:29:07,947 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:29:07,947 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:29:07.946+01:00,dataSource=youbora_events_13,filter=[user_id == "11930813", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-09 13:29:07,948 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"11930813"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:29:07.946+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-09 13:29:07,949 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:29:08,160 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 211ms.
2016-11-09 13:29:08,160 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-09 13:29:08,160 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:29:08,160 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:29:08,161 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:29:07.946+01:00,dataSource=youbora_events_13,filter=[user_id == "11930813"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-09 13:29:08,161 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"11930813"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:29:07.946+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-09 13:29:08,161 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:29:08,399 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 238ms.
2016-11-09 13:29:08,399 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
2016-11-09 13:29:08,914 DEBUG(TaskSimple.java:74): 0
2016-11-09 13:29:18,466 DEBUG(NiceForestContainer.java:27): Handling request
2016-11-09 13:29:18,467 DEBUG(TaskSimple.java:39): Starting task
2016-11-09 13:29:18,467 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:29:18,468 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:29:18,468 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:29:18.467+01:00,dataSource=youbora_events_13,filter=[user_id == "12141677", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-09 13:29:18,469 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"12141677"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:29:18.467+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-09 13:29:18,469 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:29:18,718 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 248ms.
2016-11-09 13:29:18,718 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-09 13:29:18,718 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:29:18,718 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:29:18,718 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:29:18.467+01:00,dataSource=youbora_events_13,filter=[user_id == "12141677"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-09 13:29:18,719 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"12141677"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:29:18.467+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-09 13:29:18,719 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:29:18,950 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 230ms.
2016-11-09 13:29:18,951 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
2016-11-09 13:29:19,462 DEBUG(TaskSimple.java:74): 1
2016-11-09 13:29:27,948 DEBUG(NiceForestContainer.java:27): Handling request
2016-11-09 13:29:27,949 DEBUG(TaskSimple.java:39): Starting task
2016-11-09 13:29:27,949 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:29:27,950 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:29:27,950 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:29:27.949+01:00,dataSource=youbora_events_13,filter=[user_id == "1434645", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-09 13:29:27,950 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"1434645"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:29:27.949+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-09 13:29:27,950 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:29:28,188 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 237ms.
2016-11-09 13:29:28,189 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-09 13:29:28,190 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:29:28,191 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:29:28,192 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:29:27.949+01:00,dataSource=youbora_events_13,filter=[user_id == "1434645"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-09 13:29:28,193 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"1434645"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:29:27.949+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-09 13:29:28,194 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:29:28,426 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 231ms.
2016-11-09 13:29:28,426 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
2016-11-09 13:29:28,885 DEBUG(TaskSimple.java:74): 0
2016-11-09 13:29:36,855 DEBUG(NiceForestContainer.java:27): Handling request
2016-11-09 13:29:36,856 DEBUG(TaskSimple.java:39): Starting task
2016-11-09 13:29:36,857 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:29:36,857 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:29:36,858 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:29:36.857+01:00,dataSource=youbora_events_13,filter=[user_id == "10961757", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-09 13:29:36,859 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"10961757"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:29:36.857+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-09 13:29:36,859 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:29:37,086 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 227ms.
2016-11-09 13:29:37,086 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-09 13:29:37,087 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:29:37,087 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:29:37,087 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:29:36.857+01:00,dataSource=youbora_events_13,filter=[user_id == "10961757"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-09 13:29:37,088 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"10961757"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:29:36.857+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-09 13:29:37,088 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:29:37,312 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 223ms.
2016-11-09 13:29:37,312 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
2016-11-09 13:29:37,863 DEBUG(TaskSimple.java:74): 1
2016-11-09 13:36:46,145 DEBUG(NiceForestContainer.java:27): Handling request
2016-11-09 13:36:46,146 DEBUG(TaskSimple.java:39): Starting task
2016-11-09 13:36:46,147 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:36:46,147 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:36:46,147 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:36:46.147+01:00,dataSource=youbora_events_13,filter=[user_id == "11343340", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-09 13:36:46,148 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"11343340"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:36:46.147+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-09 13:36:46,148 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:36:46,441 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 292ms.
2016-11-09 13:36:46,441 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-09 13:36:46,441 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:36:46,441 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:36:46,442 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:36:46.147+01:00,dataSource=youbora_events_13,filter=[user_id == "11343340"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-09 13:36:46,442 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"11343340"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:36:46.147+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-09 13:36:46,442 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:36:46,671 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 229ms.
2016-11-09 13:36:46,672 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
2016-11-09 13:36:47,124 DEBUG(TaskSimple.java:74): 1
2016-11-09 13:37:01,825 DEBUG(NiceForestContainer.java:27): Handling request
2016-11-09 13:37:01,825 DEBUG(TaskSimple.java:39): Starting task
2016-11-09 13:37:01,826 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:37:01,826 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:37:01,826 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:37:01.826+01:00,dataSource=youbora_events_13,filter=[user_id == "10725472", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-09 13:37:01,827 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"10725472"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:37:01.826+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-09 13:37:01,827 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:37:02,152 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 325ms.
2016-11-09 13:37:02,153 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-09 13:37:02,153 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-09 13:37:02,153 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-09 13:37:02,154 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-09T13:37:01.826+01:00,dataSource=youbora_events_13,filter=[user_id == "10725472"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-09 13:37:02,154 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"10725472"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-09T13:37:01.826+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-09 13:37:02,154 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-09 13:37:02,422 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 268ms.
2016-11-09 13:37:02,422 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
2016-11-09 13:37:02,901 DEBUG(TaskSimple.java:74): 0
