2016-11-08 18:40:21,310 DEBUG(NiceForestService.java:34): Server started
2016-11-08 18:40:24,099 DEBUG(NiceForestContainer.java:29): Handling request
2016-11-08 18:40:24,100 DEBUG(TaskSimple.java:39): Starting task
2016-11-08 18:40:24,165 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-08 18:40:24,166 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-08 18:40:24,168 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[avg_bitrate, buffer_underruns, buffer_underrun_total, viewtime, startup_time, outBytes],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-08T18:40:24.109+01:00,dataSource=youbora_events_13,filter=[user_id == "11776227", event_type == "STOP"],granularity=ALL,limit=2,groupBy=false,orderBy=[timestamp DESC],having=[]]
2016-11-08 18:40:24,174 DEBUG(SelectQuery.java:34): Created select query: 
 {"queryType": "select","dataSource": "youbora_events_13","granularity": "all","descending": "true","dimensions":[],"metrics":["avg_bitrate", "buffer_underruns", "buffer_underrun_total", "viewtime", "startup_time", "outBytes"],"filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"11776227"}, {"type":"selector", "dimension":"event_type", "value":"STOP"}]},"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-08T18:40:24.109+01:00"],"pagingSpec":{"pagingIdentifiers":{}, "threshold":2, "fromNext": true},"context":{"timeout":40000}}
2016-11-08 18:40:24,175 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-08 18:40:24,375 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 199ms.
2016-11-08 18:40:24,375 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 2 rows.
2016-11-08 18:40:24,376 DEBUG(CreateDruidQuery.java:271): Checking parameters...
2016-11-08 18:40:24,377 DEBUG(CreateDruidQuery.java:230): Params OK. Preparing query...
2016-11-08 18:40:24,378 INFO (CreateDruidQuery.java:239): CreateDruidQuery [select=[SUM(avg_bitrate) AS sum_avg_bitrate, COUNT(*) AS count, (sum_avg_bitrate / count) AS avg_avg_bitrate, SUM(buffer_underruns) AS sum_buffer_underruns, (sum_buffer_underruns / count) AS avg_buffer_underruns, SUM(viewtime) AS sum_viewtime, (sum_viewtime / count) AS avg_viewtime, SUM(startup_time) AS sum_startup_time, (sum_startup_time / count) AS avg_startup_time, SUM(buffer_underrun_total/viewtime) AS sumOfBufferRatios, (SUM(sumOfBufferRatios) / SUM(count)) AS avg_buffer_ratio],fromDate=1970-01-01T01:00:00.000+01:00,toDate=2016-11-08T18:40:24.109+01:00,dataSource=youbora_events_13,filter=[user_id == "11776227"],granularity=ALL,limit=100,groupBy=true,orderBy=[],having=[]]
2016-11-08 18:40:24,379 DEBUG(TimeseriesQuery.java:24): Created timeseries query: 
 {"queryType": "timeseries","dataSource": "youbora_events_13","granularity": "all","filter": { "type": "and","fields":[{"type":"selector", "dimension":"user_id", "value":"11776227"}]},"aggregations":[{"type":"doubleSum", "name":"sum_avg_bitrate", "fieldName":"avg_bitrate"}, {"type":"count","name":"count"}, {"type":"doubleSum", "name":"sum_buffer_underruns", "fieldName":"buffer_underruns"}, {"type":"doubleSum", "name":"sum_viewtime", "fieldName":"viewtime"}, {"type":"doubleSum", "name":"sum_startup_time", "fieldName":"startup_time"}, {"type":"javascript","name":"sumOfBufferRatios","fieldNames":["buffer_underrun_total","viewtime","viewtime"],"fnAggregate":"function(current,buffer_underrun_total,viewtime,viewtime){if(viewtime > 0){return current + (buffer_underrun_total/viewtime);}else{return current;}}","fnCombine":"function(partialA, partialB){return partialA + partialB;}","fnReset":"function(){return 0;}"}],"postAggregations":[{"type":"arithmetic","name":"avg_avg_bitrate","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_avg_bitrate"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_underruns","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_buffer_underruns"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_viewtime","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_viewtime"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_startup_time","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sum_startup_time"},{"type":"fieldAccess","fieldName":"count"}]}, {"type":"arithmetic","name":"avg_buffer_ratio","fn":"/","fields":[{"type":"fieldAccess","fieldName":"sumOfBufferRatios"},{"type":"fieldAccess","fieldName":"count"}]}],"intervals": ["1970-01-01T01:00:00.000+01:00/2016-11-08T18:40:24.109+01:00"],"context":{"skipEmptyBuckets":"false","timeout":40000}}
2016-11-08 18:40:24,380 DEBUG(DruidBrokerUtil.java:28): POSTing query to http://druid-brokers-nl.youbora.com/druid/v2/?pretty.
2016-11-08 18:40:24,517 DEBUG(DruidBrokerUtil.java:125): Query resolved by druid lib broker in 137ms.
2016-11-08 18:40:24,518 DEBUG(DruidBrokerUtil.java:126): JSON result correctly received with 1 rows.
